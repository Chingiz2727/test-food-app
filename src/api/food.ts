export type FoodItem = {
  id: number;
  name: string;
  price: number;
  image: string;
  description?: string;
  category: string;
};

export type CartItem = {
  id: number;
  name: string;
  price: number;
  image: string;
  quantity: number;
};

export type FoodCategory = {
  id: string;
  name: string;
  icon: string;
};

// Food categories
export const foodCategories: FoodCategory[] = [
  { id: "burgers", name: "–ë—É—Ä–≥–µ—Ä—ã", icon: "üçî" },
  { id: "pizza", name: "–ü–∏—Ü—Ü–∞", icon: "üçï" },
  { id: "drinks", name: "–ù–∞–ø–∏—Ç–∫–∏", icon: "ü•§" },
  { id: "snacks", name: "–ó–∞–∫—É—Å–∫–∏", icon: "üçü" },
  { id: "soups", name: "–°—É–ø—ã", icon: "üç≤" },
  { id: "salads", name: "–°–∞–ª–∞—Ç—ã", icon: "ü•ó" },
];

// Mock food data organized by categories
export const mockFoodItems: FoodItem[] = [
  // –ë—É—Ä–≥–µ—Ä—ã
  {
    id: 1,
    name: "–ë—É—Ä–≥–µ—Ä –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π",
    price: 1200,
    image: "/burger.jpg",
    description: "–°–æ—á–Ω—ã–π –±—É—Ä–≥–µ—Ä —Å –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π",
    category: "burgers"
  },
  {
    id: 2,
    name: "–ß–∏–∑–±—É—Ä–≥–µ—Ä",
    price: 1400,
    image: "/cheeseburger.jpg",
    description: "–ë—É—Ä–≥–µ—Ä —Å —Å—ã—Ä–æ–º –∏ –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π",
    category: "burgers"
  },
  {
    id: 3,
    name: "–ë—É—Ä–≥–µ—Ä —Å –∫—É—Ä–∏—Ü–µ–π",
    price: 1000,
    image: "/chicken-burger.jpg",
    description: "–ë—É—Ä–≥–µ—Ä —Å –∫—É—Ä–∏–Ω–æ–π –∫–æ—Ç–ª–µ—Ç–æ–π",
    category: "burgers"
  },

  // –ü–∏—Ü—Ü–∞
  {
    id: 4,
    name: "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
    price: 1800,
    image: "/pizza.jpg",
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π",
    category: "pizza"
  },
  {
    id: 5,
    name: "–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
    price: 2200,
    image: "/pepperoni-pizza.jpg",
    description: "–ü–∏—Ü—Ü–∞ —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ –∏ —Å—ã—Ä–æ–º",
    category: "pizza"
  },
  {
    id: 6,
    name: "–ü–∏—Ü—Ü–∞ –ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞",
    price: 2400,
    image: "/four-cheese-pizza.jpg",
    description: "–ü–∏—Ü—Ü–∞ —Å —á–µ—Ç—ã—Ä—å–º—è –≤–∏–¥–∞–º–∏ —Å—ã—Ä–∞",
    category: "pizza"
  },

  // –ù–∞–ø–∏—Ç–∫–∏
  {
    id: 7,
    name: "–ö–æ—Ñ–µ –ê–º–µ—Ä–∏–∫–∞–Ω–æ",
    price: 300,
    image: "/coffee.jpg",
    description: "–ö—Ä–µ–ø–∫–∏–π —á–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ",
    category: "drinks"
  },
  {
    id: 8,
    name: "–ö–æ–ª–∞",
    price: 250,
    image: "/cola.jpg",
    description: "–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫",
    category: "drinks"
  },
  {
    id: 9,
    name: "–°–æ–∫ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π",
    price: 200,
    image: "/orange-juice.jpg",
    description: "–°–≤–µ–∂–µ–≤—ã–∂–∞—Ç—ã–π –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫",
    category: "drinks"
  },

  // –ó–∞–∫—É—Å–∫–∏
  {
    id: 10,
    name: "–ù–∞–≥–≥–µ—Ç—Å—ã",
    price: 400,
    image: "/nuggets.jpg",
    description: "–•—Ä—É—Å—Ç—è—â–∏–µ –∫—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã",
    category: "snacks"
  },
  {
    id: 11,
    name: "–ö–∞—Ä—Ç–æ—à–∫–∞ —Ñ—Ä–∏",
    price: 350,
    image: "/fries.jpg",
    description: "–•—Ä—É—Å—Ç—è—â–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞ —Ñ—Ä–∏",
    category: "snacks"
  },
  {
    id: 12,
    name: "–ß–∏–ø—Å—ã",
    price: 200,
    image: "/chips.jpg",
    description: "–•—Ä—É—Å—Ç—è—â–∏–µ —á–∏–ø—Å—ã",
    category: "snacks"
  },

  // –°—É–ø—ã
  {
    id: 13,
    name: "–°—É–ø –ë–æ—Ä—â",
    price: 800,
    image: "/soup.jpg",
    description: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –±–æ—Ä—â",
    category: "soups"
  },
  {
    id: 14,
    name: "–°—É–ø –ì—Ä–∏–±–Ω–æ–π",
    price: 600,
    image: "/mushroom-soup.jpg",
    description: "–ê—Ä–æ–º–∞—Ç–Ω—ã–π –≥—Ä–∏–±–Ω–æ–π —Å—É–ø",
    category: "soups"
  },

  // –°–∞–ª–∞—Ç—ã
  {
    id: 15,
    name: "–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å",
    price: 600,
    image: "/salad.jpg",
    description: "–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å—ã—Ä–æ–º",
    category: "salads"
  },
  {
    id: 16,
    name: "–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç",
    price: 500,
    image: "/greek-salad.jpg",
    description: "–°–∞–ª–∞—Ç —Å –æ–≤–æ—â–∞–º–∏ –∏ —Å—ã—Ä–æ–º —Ñ–µ—Ç–∞",
    category: "salads"
  }
];

export async function getFoodItems(): Promise<FoodItem[]> {
  // Simulate API delay
  await new Promise(resolve => setTimeout(resolve, 500));
  return mockFoodItems;
}

export async function getFoodCategories(): Promise<FoodCategory[]> {
  // Simulate API delay
  await new Promise(resolve => setTimeout(resolve, 300));
  return foodCategories;
}

